# Generated by Django 4.2.25 on 2025-10-13 14:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('files', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StorageSavingsSummary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('period_start', models.DateField(help_text='Start of tracking period')),
                ('period_end', models.DateField(help_text='End of tracking period')),
                ('total_duplicates_detected', models.IntegerField(default=0)),
                ('total_storage_saved_bytes', models.BigIntegerField(default=0)),
                ('total_storage_saved_mb', models.DecimalField(decimal_places=2, default=0, help_text='Storage saved in MB', max_digits=12)),
                ('total_storage_saved_gb', models.DecimalField(decimal_places=2, default=0, help_text='Storage saved in GB', max_digits=10)),
                ('unique_files_shared', models.IntegerField(default=0, help_text='Number of unique FileContent records that have been deduplicated')),
                ('most_duplicated_type', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Storage Savings Summaries',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DeduplicationEvent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField(help_text='Size of the duplicate file in bytes (storage saved)')),
                ('file_type', models.CharField(max_length=100)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('file_content', models.ForeignKey(help_text='The FileContent that was reused (deduplicated)', on_delete=django.db.models.deletion.CASCADE, related_name='deduplication_events', to='files.filecontent')),
                ('file_reference', models.ForeignKey(help_text='The File record created for this duplicate upload', on_delete=django.db.models.deletion.CASCADE, related_name='deduplication_event', to='files.file')),
            ],
            options={
                'ordering': ['-detected_at'],
                'indexes': [models.Index(fields=['-detected_at'], name='files_dedup_detecte_8eabe9_idx'), models.Index(fields=['file_type'], name='files_dedup_file_ty_905c9a_idx')],
            },
        ),
    ]
